<?php
/**
 * Created by PhpStorm.
 * User: alexboyce
 * Date: 2/23/14
 * Time: 11:27 AM
 */

function theme_task_field_item($variables) {
  $output = '';
  $element = $variables['element'];
  $output .= '<div class="task-field-item">';
  $output .= drupal_render_children($element);
  $output .= '</div>';
  return $output;
}

function theme_tasks_field_instance_settings($variables) {
  $elements = $variables['element'];

  $element_children = element_children($elements);
  $weight_class = $elements['#field_name'] . '-weight';
  $table_id = $elements['#field_name'].'-table';
  $add_element = array();

  $rows = array();
  foreach ($element_children as $key) {
    $element = &$elements[$key];
    if ($element['entity']['#type'] === 'select') {
      $add_element = &$element;
      continue;
    }

    hide($element['add']);
    hide($element['remove']);
    hide($element['_weight']);
    $element['_weight']['#attributes']['class'] = array($weight_class);
    $row = array(
      t($element['#title']).drupal_render_children($element),
      render($element['_weight']),
      render($element['remove'])
    );

    $rows[] = array(
      'data' => $row,
      'class' => isset($element['#attributes']['class'])
          ? array_merge($element['#attributes']['class'], array('draggable')) : array('draggable'),
    );
  }

  if (isset($add_element['entity'])) {
    hide($add_element['remove']);
    hide($add_element['_weight']);
    $add_element['entity']['#weight'] = -1;
    $add_element['add']['#weight'] = 0;
    $add_element['_weight']['#attributes']['class'] = array($weight_class);
    $row = array(
      render($add_element['entity']).' '.render($add_element['add']),
      array('data' => render($add_element['_weight']), 'class' => $weight_class),
      ''
    );

    $rows[] = array(
      'data' => $row,
      'class' => isset($add_element['#attributes']['class'])
          ? array_merge($add_element['#attributes']['class'], array('draggable')) : array('draggable'),
    );
  }

  drupal_add_tabledrag($table_id, 'order', 'sibling', $weight_class);
  $output = '';
  if (!empty($rows)) {
    $output = empty($rows) ? '' : theme('table', array('header' => array(), 'rows' => $rows, 'attributes' => array('id' => $table_id)));
    $output .= drupal_render_children($elements);
  }
  return $output;
}

function theme_tasks_field_widget($variables) {
  $element = $variables['element'];
  $children = element_children($element);

  $header = array(
    t('Task'),
    t('Roles'),
    t('Accounts'),
    t('Status')
  );

  $rows = array();

  foreach ($children as $name) {
    $widget = &$children[$name];
    hide($widget['roles']);
    hide($widget['accounts']);
    hide($widget['status']);
    $rows[] = array(
      drupal_render($widget),
      render($widget['roles']),
      render($widget['accounts']),
      render($widget['status'])
    );
  }

  $empty = t('No tasks have been created. %link.', array('%link' => l('Create a new task', 'admin/jobs/tasks')));

  return theme('table', array('header' => $header, 'rows' => $rows, 'empty' => $empty));
}

function theme_tasks_field_widget_item($variables) {
  $element = $variables['element'];
  $output = '<div class="task-widget-item">';
  $output .= drupal_render_children($element);
  $output .= '</div>';
  return $output;
}

function theme_tasks_formatter_items($variables) {
  $elements = $variables['element'];

  $header = array(
    t('Task'),
    t('Operation')
  );

  $rows = array();

  foreach (element_children($elements) as $name) {
    $element = &$elements[$name];
    $entity = $element['#entity'];
    $type = entity_load_multiple_by_name('jobbag_task_type', array($entity->type));
    $element['#title_display'] = 'hidden';
    $rows[] = array(
      $type->label(),
      drupal_render($element)
    );
  }

  return theme('table', array('header' => $header, 'rows' => $rows));
}